import React from 'react'
import ReactDOM from 'react-dom'

const Buttons = () => {
	return (
		<div id="buttons">
			<h2>Buttons</h2>
		</div>
	)
};

const Log = ({ hosts }) => {
	return (
		<div id="log">
			<h2>Log</h2>
			<div id="log_text">
				<ul>
				{hosts.map((host) => (
					<li>{host.parent_ip} infected {host.ip}</li>
				))}
				</ul>
			</div>
		</div>
	)
};

const HostInfo = () => {
	return (
		<div id="host_info">
			<h2>HostInfo</h2>
		</div>
	)
};

const Graph = () => {
	return (
		<div id="graph">
			<h2>Graph</h2>
			<iframe src="https://samiser.github.io/CubePulse/index.html" width="600px" height="400px"></iframe>
		</div>
	)
};

const Discovered = () => {
	return (
		<div id="discovered">
			<h2>Discovered</h2>
		</div>
	)
};

const Infected = ({ hosts }) => {
	return (
		<div id="infected">
			<h2>Infected</h2>
			<ul>
			{hosts.map((host) => (
				<li>{host.ip}</li>
			))}
			</ul>
		</div>
	)
};

class HostList extends React.Component {
	constructor(props) {
		super(props);
		this.state = {
			hosts: [],
			seconds: 0
		}
	}

	getHosts() {
		fetch('http://127.0.0.1:8000/api/worms/?format=json')
		.then(res => res.json())
		.then((data) => {
			this.setState({ hosts: data })
		})
		.catch(console.log)
	}

	componentDidMount() {
		this.getHosts();
		this.interval = setInterval(() => this.getHosts(), 1000);
	}

	componentWillUnmount() {
		clearInterval(this.interval);
	}

	render() {
		return (
			<div class="container">
				<Buttons />
				<Log hosts={this.state.hosts} />
				<HostInfo />
				<Graph />
				<Discovered />
				<Infected hosts={this.state.hosts} />
			</div>
		);
	}
}

const element = <HostList />;
ReactDOM.render(
  element,
  document.getElementById('react')
);
