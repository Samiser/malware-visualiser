import React from 'react'
import ReactDOM from 'react-dom'




// generate a html list of hosts from the raw data
const Hosts = ({ hosts }) => {

	/*this.list_to_tree = function(list) {
			var map = {}, node, roots = [], i;
			for (i = 0; i < list.length; i += 1) {
					map[list[i].ip] = i; // initialize the map
					list[i].children = []; // initialize the children
			}
			for (i = 0; i < list.length; i += 1) {
					node = list[i];
					if (node.parent_ip !== "0") {
							// if you have dangling branches check that map[node.parent_ip] exists
							list[map[node.parent_ip]].children.push(node);
					} else {
							roots.push(node);
					}
			}
			return roots;
	}*/

	return (
		<React.Fragment>
			<h1>Hosts</h1>
			<ul>
			{hosts.map((host) => (
				<li>{host.parent_ip} infected {host.ip}</li>
			))}
			</ul>
		</React.Fragment>
	)
};

class HostList extends React.Component {
	constructor(props) {
		super(props);
		this.state = {
			hosts: [],
			seconds: 0
		}
	}

	getHosts() {
		fetch('http://127.0.0.1:8000/api/worms/?format=json')
		.then(res => res.json())
		.then((data) => {
			this.setState({ hosts: data })
		})
		.catch(console.log)
	}

	componentDidMount() {
		this.getHosts();
		this.interval = setInterval(() => this.getHosts(), 1000);
	}

	componentWillUnmount() {
		clearInterval(this.interval);
	}

	render() {
		return (
			<Hosts hosts={this.state.hosts} />
		);
	}
}

const element = <HostList />;
ReactDOM.render(
  element,
  document.getElementById('react')
);
